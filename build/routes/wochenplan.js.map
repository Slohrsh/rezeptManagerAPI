{"version":3,"sources":["../../src/routes/wochenplan.js"],"names":["router","get","req","res","context","models","Wochenplan","findAllByKw","params","kw","eintraege","rezeptIds","forEach","eintrag","push","REZ01REZEPTId","Rezept","findRezepte","rezepte","eintraegeView","i","rezeptEintrag","rezept","id","tag","zeitraum","length","send","post","body","plan","create","rezeptId","newRezept"],"mappings":";;;;;;;AAAA;;;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,MAAX;AAAA,qEAAmB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOD,GAAG,CAACE,OAAJ,CAAYC,MAAZ,CAAmBC,UAAnB,CAA8BC,WAA9B,CAA0CL,GAAG,CAACM,MAAJ,CAAWC,EAArD,CADP;;AAAA;AACXC,YAAAA,SADW;AAGXC,YAAAA,SAHW,GAGC,EAHD;AAKjBD,YAAAA,SAAS,CAACE,OAAV,CACE,UAACC,OAAD,EAAa;AACXF,cAAAA,SAAS,CAACG,IAAV,CAAeD,OAAO,CAACE,aAAvB;AACD,aAHH;AALiB;AAAA,mBAWKb,GAAG,CAACE,OAAJ,CAAYC,MAAZ,CAAmBW,MAAnB,CAA0BC,WAA1B,CAAsCN,SAAtC,CAXL;;AAAA;AAWXO,YAAAA,OAXW;AAaXC,YAAAA,aAbW,GAaK,EAbL;;AAAA,mCAeTC,CAfS;AAgBf,kBAAIC,aAAa,SAAjB;AACAH,cAAAA,OAAO,CAACN,OAAR,CAAgB,UAACU,MAAD,EAAY;AAC1B,oBAAGZ,SAAS,CAACU,CAAD,CAAT,CAAaL,aAAb,KAA+BO,MAAM,CAACC,EAAzC,EAA6C;AAC3CF,kBAAAA,aAAa,GAAGC,MAAhB;AACA;AACD;AACF,eALD;AAOAH,cAAAA,aAAa,CAACL,IAAd,CAAoB;AAClBU,gBAAAA,GAAG,EAAEd,SAAS,CAACU,CAAD,CAAT,CAAaI,GADA;AAElBC,gBAAAA,QAAQ,EAAEf,SAAS,CAACU,CAAD,CAAT,CAAaK,QAFL;AAGlBH,gBAAAA,MAAM,EAAED;AAHU,eAApB;AAxBe;;AAejB,iBAAQD,CAAR,GAAY,CAAZ,EAAeA,CAAC,GAAGV,SAAS,CAACgB,MAA7B,EAAqCN,CAAC,EAAtC,EAA0C;AAAA,oBAAlCA,CAAkC;AAczC;;AA7BgB,6CA+BVjB,GAAG,CAACwB,IAAJ,CAASR,aAAT,CA/BU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;AAkCAnB,MAAM,CAAC4B,IAAP,CAAY,GAAZ;AAAA,sEAAiB,kBAAO1B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACID,GAAG,CAAC2B,IADR;;AAAA;AACTC,YAAAA,IADS;AAAA;AAAA,mBAGS5B,GAAG,CAACE,OAAJ,CAAYC,MAAZ,CAAmBC,UAAnB,CAA8ByB,MAA9B,CACtB;AACEtB,cAAAA,EAAE,EAAEqB,IAAI,CAACrB,EADX;AAEEe,cAAAA,GAAG,EAAEM,IAAI,CAACN,GAFZ;AAGEC,cAAAA,QAAQ,EAAEK,IAAI,CAACL,QAHjB;AAIEV,cAAAA,aAAa,EAAEe,IAAI,CAACE;AAJtB,aADsB,CAHT;;AAAA;AAGTC,YAAAA,SAHS;AAAA,8CAWR9B,GAAG,CAACwB,IAAJ,CAASM,SAAT,CAXQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;eAcejC,M","sourcesContent":["import { Router } from 'express';\n\nconst router = Router();\n\nrouter.get('/:kw', async (req, res) => {\n  const eintraege = await req.context.models.Wochenplan.findAllByKw(req.params.kw);\n\n  const rezeptIds = [];\n\n  eintraege.forEach(\n    (eintrag) => {\n      rezeptIds.push(eintrag.REZ01REZEPTId);\n    }\n  )\n\n  const rezepte = await req.context.models.Rezept.findRezepte(rezeptIds);\n\n  const eintraegeView = [];\n\n  for(let i = 0; i < eintraege.length; i++) {\n    let rezeptEintrag;\n    rezepte.forEach((rezept) => {\n      if(eintraege[i].REZ01REZEPTId === rezept.id) {\n        rezeptEintrag = rezept;\n        return;\n      }\n    });\n\n    eintraegeView.push( {\n      tag: eintraege[i].tag,\n      zeitraum: eintraege[i].zeitraum,\n      rezept: rezeptEintrag\n    });\n  }\n    \n  return res.send(eintraegeView);\n});\n\nrouter.post('/', async (req, res) => {\n  const plan = await req.body;\n\n  const newRezept = await req.context.models.Wochenplan.create(\n    {\n      kw: plan.kw,\n      tag: plan.tag,\n      zeitraum: plan.zeitraum,\n      REZ01REZEPTId: plan.rezeptId\n    }\n  );\n  return res.send(newRezept);\n});\n\nexport default router;"],"file":"wochenplan.js"}