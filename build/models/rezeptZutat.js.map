{"version":3,"sources":["../../src/models/rezeptZutat.js"],"names":["require","Op","regeneratorRuntime","rezeptZutat","sequelize","DataTypes","RezeptZutat","define","menge","type","INTEGER","einheit","STRING","associate","models","belongsTo","Rezept","foreignKey","as","Zutat","hasMany","Einkaufsliste","findMengen","mengenIds","findAll","where","id","mengen"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;eAEeA,OAAO,CAAC,WAAD,C;IAAdC,E,YAAAA,E;;AACR,IAAMC,kBAAkB,GAAGF,OAAO,CAAC,qBAAD,CAAlC;;AAEA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC1C,MAAMC,WAAW,GAAGF,SAAS,CAACG,MAAV,CAAiB,sBAAjB,EAAyC;AAC3DC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AADX,KADoD;AAI3DC,IAAAA,OAAO,EAAE;AACPF,MAAAA,IAAI,EAAEJ,SAAS,CAACO;AADT;AAJkD,GAAzC,CAApB;;AASAN,EAAAA,WAAW,CAACO,SAAZ,GAAwB,UAACC,MAAD,EAAY;AAClCR,IAAAA,WAAW,CAACS,SAAZ,CAAsBD,MAAM,CAACE,MAA7B,EAAqC;AACnCC,MAAAA,UAAU,EAAE,oBADuB;AAEnCC,MAAAA,EAAE,EAAE;AAF+B,KAArC;AAIAZ,IAAAA,WAAW,CAACS,SAAZ,CAAsBD,MAAM,CAACK,KAA7B,EAAoC;AAClCF,MAAAA,UAAU,EAAE,oBADsB;AAElCC,MAAAA,EAAE,EAAE;AAF8B,KAApC;AAIAZ,IAAAA,WAAW,CAACc,OAAZ,CAAoBN,MAAM,CAACO,aAA3B,EAA0C;AAAEH,MAAAA,EAAE,EAAE;AAAN,KAA1C;AACD,GAVD;;AAYAZ,EAAAA,WAAW,CAACgB,UAAZ;AAAA,uEAAyB,iBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACJjB,WAAW,CAACkB,OAAZ,CAAoB;AACrCC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,EAAE,sBACCzB,EAAE,MADH,EACSsB,SADT;AADG;AAD8B,eAApB,CADI;;AAAA;AACnBI,cAAAA,MADmB;AAAA,+CAShBA,MATgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzB;;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAOrB,WAAP;AACD,CApCH;;eAsCiBH,W","sourcesContent":["/**\n * Entity: REZ70_REZEPT_ZUTATEN\n */\n\nconst { Op } = require(\"sequelize\");\nconst regeneratorRuntime = require(\"regenerator-runtime\");\n\nconst rezeptZutat = (sequelize, DataTypes) => {\n    const RezeptZutat = sequelize.define('REZ70_REZEPT_ZUTATEN', {\n      menge: {\n        type: DataTypes.INTEGER\n      },\n      einheit: {\n        type: DataTypes.STRING\n      }\n    });\n   \n    RezeptZutat.associate = (models) => {\n      RezeptZutat.belongsTo(models.Rezept, {\n        foreignKey: \"rez01_rezept_zutat\",\n        as: \"rezept\",\n      });\n      RezeptZutat.belongsTo(models.Zutat, {\n        foreignKey: \"rez02_zutat_rezept\",\n        as: \"zutat\",\n      });\n      RezeptZutat.hasMany(models.Einkaufsliste, { as: 'listeneintrag' });\n    };\n\n    RezeptZutat.findMengen = async mengenIds => {\n      let mengen = await RezeptZutat.findAll({\n        where: {\n          id: {\n            [Op.in]: mengenIds\n          }\n        }\n      });\n  \n      return mengen;\n    };\n    \n   \n    return RezeptZutat;\n  };\n   \n  export default rezeptZutat;"],"file":"rezeptZutat.js"}