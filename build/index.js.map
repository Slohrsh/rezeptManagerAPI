{"version":3,"sources":["../src/index.js"],"names":["FS","require","app","use","express","json","urlencoded","extended","req","res","next","context","models","routes","rezept","zutat","wochenplan","favorit","einkaufsliste","eraseDatabaseOnSync","sequelize","sync","force","then","createRezept","listen","process","env","PORT","console","log","Rezept","create","id","bild","titel","kcal","Zutat","beschreibung","RezeptZutat","menge","einheit","REZ01REZEPTId","REZ02ZUTATId","Einkaufsliste","REZ70REZEPTZUTATENId"],"mappings":"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","sourcesContent":["import 'dotenv/config';\nimport cors from 'cors';\nimport express from 'express';\n\nimport models, { sequelize } from './models';\nimport routes from './routes';\nvar FS = require('fs');\n\n\nconst app = express();\n\n// * Application-Level Middleware * //\n\n// Third-Party Middleware\n\napp.use(cors());\n\n// Built-In Middleware\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n\n// Custom Middleware\n\napp.use(async (req, res, next) => {\n  req.context = {\n    models\n  };\n  next();\n});\n\n// * Routes * //\n\napp.use('/api/rezept', routes.rezept);\napp.use('/api/zutat', routes.zutat);\napp.use('/api/wochenplan', routes.wochenplan);\napp.use('/api/favorit', routes.favorit);\napp.use('/api/einkaufsliste', routes.einkaufsliste);\n\n// * Start * //\nconst eraseDatabaseOnSync = false;\n\nsequelize.sync({ force: eraseDatabaseOnSync}).then(async () => {\n\n  if (eraseDatabaseOnSync) {\n    createRezept();\n  }\n\n  app.listen(process.env.PORT, () =>\n    console.log(`Example app listening on port ${process.env.PORT}!`),\n  );\n\n});\n\nconst createRezept = async () => {\n  await models.Rezept.create(\n    {\n      id: 1,\n      bild: 'https://img.chefkoch-cdn.de/rezepte/422041132876716/bilder/1117837/crop-600x400/tomate-mozzarella.jpg',\n      titel: 'Tomate Mozarella',\n      rezept: 'Tomate und Mozarella mit Öl und Gewürz zämmeschmeisse',\n      kcal: '300'\n    }\n  );\n  await models.Rezept.create(\n    {\n      id: 2,\n      bild: 'https://d12xickik43a9a.cloudfront.net/images/magazine/de/M28912-klassische-Pizzabroetchen-Q75-750.jpg',\n      titel: 'Dinkel Pizzabrötchen',\n      rezept: '•Die Hefe mit dem Zucker und etwas lauwarmen Wasser verrühren.\\r' +\n      '•Mehl und Salz in eine Schüssel geben.\\r' +\n      '•Öl dazugeben.\\r' +\n      '• ca 100-150ml Wasser dazu geben, lieber nach und nach dazugeben.\\r' +\n      '•und die Hefe mischung mit in die schüssel geben, alles mit dem Handrührgerät verrühren. (mit den Händen geht das auch)\\r' +\n      '•Brötchen formen und auf ein Backblech mit Backpapier geben.\\r' +\n      'Bei 180C° ca. 10-12min. Backen.\\r',\n      kcal: '172'\n    }\n  );\n  await models.Zutat.create(\n    {\n      id: 1,\n      beschreibung: 'Tomate'\n    }\n  );\n  await models.Zutat.create(\n    {\n      id: 2,\n      beschreibung: 'Mozarella'\n    }\n  );\n  await models.Zutat.create(\n    {\n      id: 3,\n      beschreibung: 'Öl'\n    }\n  );\n  await models.Zutat.create(\n    {\n      id: 4,\n      beschreibung: 'Tomate Mozarella Gewürz'\n    }\n  );\n  await models.RezeptZutat.create(\n    {\n      menge: 2,\n      einheit: 'Stück',\n      REZ01REZEPTId: 1,\n      REZ02ZUTATId: 1\n    }\n  );\n  await models.RezeptZutat.create(\n    {\n      menge: 1,\n      einheit: 'Stück',\n      REZ01REZEPTId: 1,\n      REZ02ZUTATId: 2\n    }\n  );\n  await models.RezeptZutat.create(\n    {\n      menge: 1,\n      einheit: 'EL',\n      REZ01REZEPTId: 1,\n      REZ02ZUTATId: 3\n    }\n  );\n  await models.RezeptZutat.create(\n    {\n      menge: 1,\n      einheit: 'Prise',\n      REZ01REZEPTId: 1,\n      REZ02ZUTATId: 4\n    }\n  );\n  await models.Zutat.create(\n    {\n      id: 5,\n      beschreibung: 'Dinkelmehl'\n    }\n  );\n  await models.RezeptZutat.create(\n    {\n      menge: 200,\n      einheit: 'Gramm',\n      REZ01REZEPTId: 2,\n      REZ02ZUTATId: 5\n    }\n  );\n  await models.Zutat.create(\n    {\n      id: 6,\n      beschreibung: 'Hefe frisch'\n    }\n  );\n  await models.RezeptZutat.create(\n    {\n      menge: 20,\n      einheit: 'Gramm',\n      REZ01REZEPTId: 2,\n      REZ02ZUTATId: 6\n    }\n  );\n  await models.Zutat.create(\n    {\n      id: 7,\n      beschreibung: 'Zucker'\n    }\n  );\n  await models.RezeptZutat.create(\n    {\n      menge: 5,\n      einheit: 'Gramm',\n      REZ01REZEPTId: 2,\n      REZ02ZUTATId: 7\n    }\n  );\n  await models.Zutat.create(\n    {\n      id: 8,\n      beschreibung: 'Salz'\n    }\n  );\n  await models.RezeptZutat.create(\n    {\n      menge: 10,\n      einheit: 'Gramm',\n      REZ01REZEPTId: 2,\n      REZ02ZUTATId: 8\n    }\n  );\n  await models.Zutat.create(\n    {\n      id: 9,\n      beschreibung: 'Olivenöl'\n    }\n  );\n  await models.RezeptZutat.create(\n    {\n      menge: 10,\n      einheit: 'Gramm',\n      REZ01REZEPTId: 2,\n      REZ02ZUTATId: 9\n    }\n  );\n  await models.Zutat.create(\n    {\n      id: 10,\n      beschreibung: 'lauwarmes Wasser'\n    }\n  );\n  await models.RezeptZutat.create(\n    {\n      menge: 150,\n      einheit: 'Milliliter',\n      REZ01REZEPTId: 2,\n      REZ02ZUTATId: 10\n    }\n  );\n  await models.Einkaufsliste.create(\n    {\n      id: 1,\n      REZ70REZEPTZUTATENId: 1\n    }\n  );\n  await models.Einkaufsliste.create(\n    {\n      id: 2,\n      REZ70REZEPTZUTATENId: 2\n    }\n  );\n  await models.Einkaufsliste.create(\n    {\n      id: 3,\n      REZ70REZEPTZUTATENId: 3\n    }\n  );\n  await models.Einkaufsliste.create(\n    {\n      id: 4,\n      REZ70REZEPTZUTATENId: 4\n    }\n  );\n  await models.Einkaufsliste.create(\n    {\n      id: 5,\n      REZ70REZEPTZUTATENId: 5\n    }\n  );\n  await models.Einkaufsliste.create(\n    {\n      id: 6,\n      REZ70REZEPTZUTATENId: 5\n    }\n  );\n};"],"file":"index.js"}